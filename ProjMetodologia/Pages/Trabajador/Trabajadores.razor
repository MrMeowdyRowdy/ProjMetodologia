@using System.Net.Http.Json
@using Data
@using System.Text
@using System.Text.Json
@using Data.Trabajador;
@using Reportes;

@page "/ListaTrabajador"
@inject HttpClient Http
@inject SharedStateService SharedState
@inject IJSRuntime JSRuntime

<h3>Lista de Trabajadores</h3>
<h3>Sede: @SharedState.CodEmisor</h3>

<button type="button" class="btn btn-success mb-2" @onclick="@GenerarReporte">Generar reporte</button>

@if (trabajadorApiE != null)
{
    if (isMobile)
    {
        @foreach (var item in trabajadorApiE)
        {
            <div class="mobile-table-row">
                <div class="mobile-table-cell"><strong>Nombres:</strong> @item.Nombres</div>
                <div class="mobile-table-cell"><strong>Apellidos:</strong> @($"{item.Apellido_Paterno} {item.Apellido_Materno}")</div>
                <div class="mobile-table-cell"><strong>Identificación:</strong> @item.Identificacion</div>
                <div class="mobile-table-cell"><strong>Carnet IESS:</strong> @item.CarnetIESS</div>
                <div class="mobile-table-cell"><strong>Genero:</strong> @item.Genero</div>
                <div class="mobile-table-cell"><strong>Nivel Salarial:</strong> @item.Nivel_Salarial</div>
                <div class="mobile-table-cell"><strong>Fecha de ingreso:</strong> @item.FechaIngreso.ToShortDateString()</div>
            </div>
        }
    }
    else
    {
        <table class="table">
            <thead>
                <tr>
                    <th>Nombres</th>
                    <th>Apellidos</th>
                    <th>Identificacion</th>
                    <th>CarnetIESS</th>
                    <th>Genero</th>
                    <th>Nivel Salarial</th>
                    <th>Fecha Ingreso</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in trabajadorApiE)
                {
                    <tr>
                        <td>@item.Nombres</td>
                        <td>@($"{item.Apellido_Paterno} {item.Apellido_Materno}")</td>
                        <td>@item.Identificacion</td>
                        <td>@item.CarnetIESS</td>
                        <td>@item.Genero</td>
                        <td>@item.Nivel_Salarial</td>
                        <td>@item.FechaIngreso.ToShortDateString()</td>
                    </tr>
                }
            </tbody>
        </table>
    }
}
else
{
    <p>Loading...</p>
}

@code {

    private List<Trabajador> trabajadorApiE = new List<Trabajador>();
    private bool isMobile;
    private bool isLoaded = false;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender && !isLoaded)
        {
            isMobile = await JSRuntime.InvokeAsync<bool>("isMobileDevice");
            isLoaded = true; // Asegurarse de que no se vuelva a cargar
            StateHasChanged(); // Esto notificará a Blazor que debe volver a renderizar el componente
        }
    }

    private async Task GetTrabajadorData()
    {
        var apiName = $"api/Varios/TrabajadorSelect?sucursal={SharedState.CodEmisor}";

        try
        {
            trabajadorApiE = await Http.GetFromJsonAsync<List<Trabajador>>(apiName);
        }
        catch (HttpRequestException e)
        {
            Console.WriteLine($"Error al obtener datos del usuario: {e.Message}");
        }
    }

    protected override async Task OnInitializedAsync()
    {
        await GetTrabajadorData();
    }

    private async void GenerarReporte()
    {
        var xls = new ReporteControlador();
        await xls.GenerarReporteTrabajador(js, trabajadorApiE, $"ReporteTrabajadoresSucursal{SharedState.CodEmisor}.xlsx", SharedState.CodEmisor);
    }

}