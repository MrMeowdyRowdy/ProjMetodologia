@using System.Net.Http.Json
@using Data
@using System.Text
@using System.Text.Json

@page "/Autorizador/{opcion}"
@layout LoginLayout
@inject HttpClient Http
@inject NavigationManager NavigationManager
@inject SharedStateService SharedState

<section class="vh-100 gradient-custom">
    <div class="container py-5 h-100">
        <div class="row d-flex justify-content-center align-items-center h-100">
            <div class="col-12 col-md-8 col-lg-6 col-xl-5">
                <div class="card bg-dark text-white">
                    <div class="card-body p-5 text-center">
                        <div class="card-body p-5 text-center">
                            <div class="mb-md-5 mt-md-4 pb-5">
                                <h2 class="fw-bold mb-2 text-uppercase">Autorizador</h2>
                                <form class="sign-up-form" onsubmit="@(async () => { await GetUser(); })">
                                    <div class="form-outline form-white mb-4">
                                        <input @bind="user.Username" id="username" class="form-control form-control-lg" placeholder="XXXX" />
                                        <label class="form-label" for="username">Usuario</label>
                                    </div>

                                    <div class="form-outline form-white mb-4">
                                        <input @bind="user.Password" class="form-control" id="password-field" type="password" placeholder="XXXXX" />
                                        <label class="form-label" for="password-field">Contraseña</label>
                                    </div>

                                    <button type="submit" class="btn btn-outline-light btn-lg px-5" style="@(loginSuccessful ? "display: none;" : "")">Login</button>
                                    <div class="popup" style="@(showPopup ? "display: block;" : "display: none;")">
                                        <div class="card success-card text-center">
                                            <div class="container">
                                                <img src="Images/icon-success.svg" alt="Error" />
                                                <h2>Error de credenciales</h2>
                                            </div>
                                            <p>Usuario o contraseña incorrectos</p>
                                            <button @onclick="ClosePopup" class="btn dismiss-btn">Try again</button>
                                        </div>
                                    </div>
                                </form>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>  
</section>

@code {
    private UserDto user = new UserDto();
    private Autorizador[] apiResponse;
    private string resultado, mensaje;
    private bool loginSuccessful = false;
    private bool showPopup = false;
    [Parameter]
    public string opcion { get; set; }

    protected override void OnInitialized()
    {
        // Obtener el valor del parámetro de la URL
        opcion = System.Net.WebUtility.UrlDecode(opcion);
    }

    private async Task GetUser()
    {
        await GetUserData();
        if (apiResponse != null)
        {
            loginSuccessful = true; // Actualiza la variable de estado
        }
    }

    private async Task GetUserData()
    {
        var apiName = $"api/Varios/GetAutorizador?usuario={user.Username}&password={user.Password}";

        try
        {
            apiResponse = await Http.GetFromJsonAsync<Autorizador[]>(apiName);
            mensaje = apiResponse[0].OBSERVACION;

            if (apiResponse != null && apiResponse[0].OBSERVACION.Equals("INGRESO EXITOSO"))
            {
                loginSuccessful = true;
                NavigationManager.NavigateTo(String.Concat("/", opcion));
            }
            else
            {
                loginSuccessful = false; // Agrega esta línea
                LimpiarCampos();
            }
        }
        catch (HttpRequestException e)
        {
            mensaje = "FALLO EN EL ACCESO";
            apiResponse = null;
            loginSuccessful = false; // Agrega esta línea
            Validate();
            LimpiarCampos();
        }
        catch (Exception e)
        {
            mensaje = "FALLO EN EL ACCESO";
            apiResponse = null;
            loginSuccessful = false; // Agrega esta línea
            Validate();
            LimpiarCampos();
        }
    }

    private void Validate()
    {
        if (loginSuccessful)
        {
            resultado = "Access";
            NavigationManager.NavigateTo("/Index");
            showPopup = false;
        }
        else
        {
            resultado = "";
            showPopup = true;
        }
    }

    private void ClosePopup()
    {
        showPopup = false;
    }

    private void LimpiarCampos()
    {
        apiResponse = null;
        user.Username = string.Empty;
        user.Password = string.Empty;
        resultado = string.Empty;
        mensaje = string.Empty;
        loginSuccessful = false;
    }

}

