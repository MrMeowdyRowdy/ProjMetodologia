@using System.Net.Http.Json
@using Data
@using System.Text
@using System.Text.Json

@page "/"
@layout LoginLayout
@inject HttpClient Http
@inject NavigationManager NavigationManager


<div class="row mt-5">
    <div class="col-lg-4 offset-lg-4 border">
        <div class="mb-3 text-center">
            <h3>LOGIN</h3>
        </div>
        <div class="mb-3">
            <label>Usuario</label>
            <input @bind="user.Username" class="form-control"/>
        </div>
        <div class="mb-3">
            <label>Contraseña</label>
            <input @bind="user.Password" class="form-control" type="password"/>
        </div>
        <div class="mb-3">
            <button @onclick="GetUser" class="btn btn-primary">Login</button>
        </div>
        <div class="mb-3">
            @if (apiResponse != null)
            {
                <p class="text-success">Login success</p>
            }
        </div>
        @if (showDropdown)
        {
            <div class="mb-3">
                <label>Emisor</label>
                <select @bind="selectedEmisor" class="form-control">
                    <option value="">Seleccione un emisor</option>
                    @foreach (var emisor in apiResponseE)
                    {
                        <option value="@emisor.Codigo">@emisor.NombreEmisor</option>
                    }
                </select>
            </div>
            <div class="mb-3">
                <button @onclick="Validate" class="btn btn-primary">Continuar</button>
            </div>
            <div class="mb-3">
                <p class="text-success">@resultado</p>
            </div>
        }
    </div>
</div>

@code {
    private UserDto user = new UserDto();
    private User[] apiResponse;
    private List<Emisor> apiResponseE = new List<Emisor>();
    private int selectedEmisor;
    private bool showDropdown = false;
    private String resultado;

    private async Task GetUser()
    {
        await GetUserData();
        await GetEmisorData();
        showDropdown = true;
    }

    private async Task GetUserData()
    {
        var apiName = $"api/Usuarios?usuario={user.Username}&password={user.Password}";

        try
        {
            apiResponse = await Http.GetFromJsonAsync<User[]>(apiName);
            // Lógica adicional después de obtener apiResponse
        }
        catch (HttpRequestException e)
        {
            Console.WriteLine($"Error al obtener datos del usuario: {e.Message}");
            // Manejar el error específico del usuario aquí
        }
    }

    private async Task GetEmisorData()
    {
        var apiEmisor = "api/Varios/GetEmisor";

        try
        {
            apiResponseE = await Http.GetFromJsonAsync<List<Emisor>>(apiEmisor);
            selectedEmisor = apiResponseE.FirstOrDefault()?.Codigo ?? 0;
        }
        catch (HttpRequestException e)
        {
            Console.WriteLine($"Error al obtener datos del emisor: {e.Message}");
            // Manejar el error específico del emisor aquí
        }
    }

    private void Validate()
    {
        if (selectedEmisor == apiResponse[0].Emisor)
        {
            resultado = "Access";
            NavigationManager.NavigateTo("/Index");
        }
        else
        {
            resultado = "";
        }
    }
}
