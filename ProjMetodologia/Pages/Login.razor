@using System.Net.Http.Json
@using Data
@using System.Text
@using System.Text.Json

@page "/"
@layout LoginLayout
@inject HttpClient Http
@inject NavigationManager NavigationManager
@inject SharedStateService SharedState

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <!-- displays site properly based on user's device -->

    <link
      rel="icon"
      type="image/png"
      sizes="32x32"
      href="./Images/favicon-32x32.png"
    />

    <!-- CSS -->
    <link rel="stylesheet" href="/css/site.css" />
  </head>
  <body>
<main>
<div class="card sign-up-card">
        <img
          class="sign-up-img"
                 src="~/Images/illustration-sign-up-mobile.svg" />
        <div class="sign-up-text">
            <h2>Login</h2>

            <form class="sign-up-form">
                <div class="mb-3">
                    <label for="username">Usuario</label>
                    <input @bind="user.Username" class="form-control" placeholder="XX24" />
                    <span class="error-message">Valid eusername required</span>
                </div>
                <div class="mb-3">
                    <label for="password">Contraseña</label>
                    <input @bind="user.Password" class="form-control" type="password" />
                    <span class="error-message">Valid password required</span>
                </div>
                <div class="mb-3">
                    @if (apiResponse != null)
                    {
                        if (apiResponse[0].OBSERVACION.Equals("INGRESO EXITOSO"))
                        {
                            <!--
                            <p class="text-success"></p>-->
                            @if (showDropdown && apiResponse[0].OBSERVACION.Equals("INGRESO EXITOSO"))
                            {
                                <div class="mb-3">
                                    <label>Emisor</label>
                                    <select @bind="selectedEmisor" class="form-control">
                                        <option value="">Seleccione un emisor</option>
                                        @foreach (var emisor in apiResponseE)
                                        {
                                            <option value="@emisor.Codigo">@emisor.NombreEmisor</option>
                                        }
                                    </select>
                                </div>
                                <div class="mb-3">
                                    <button @onclick="Validate" class="btn btn-primary">Continuar</button>
                                </div>
                            }
                        }
                    }
                </div>
                <div>
                    <button @onclick="GetUser" class="btn submit-btn">Login</button>
                    <button @onclick="LimpiarCampos" class="btn submit-btn">Cancelar</button>
                </div>
            </form>
            </div>
    </div>
</main>
</body>
</html>
@code {
    private UserDto user = new UserDto();
    private User[] apiResponse;
    private List<Emisor> apiResponseE = new List<Emisor>();
    private int selectedEmisor;
    private bool showDropdown = false;
    private String resultado, mensaje;

    private async Task GetUser()
    {
        await GetUserData();
        if (apiResponse != null)
        {
            await GetEmisorData();
        }
        showDropdown = true;
    }

    private async Task GetUserData()
    {
        var apiName = $"api/Usuarios?usuario={user.Username}&password={user.Password}";

        try
        {
            apiResponse = await Http.GetFromJsonAsync<User[]>(apiName);
            mensaje = apiResponse[0].OBSERVACION;
        }
        catch (HttpRequestException e)
        {
            mensaje = "FALLO EN EL ACCESO";
            apiResponse = null;
        }
        catch (Exception e)
        {
            mensaje = "FALLO EN EL ACCESO";
            apiResponse = null;
        }
    }

    private async Task GetEmisorData()
    {
        var apiEmisor = "api/Varios/GetEmisor";

        try
        {
            apiResponseE = await Http.GetFromJsonAsync<List<Emisor>>(apiEmisor);
            selectedEmisor = apiResponse.Length > 0 ? apiResponse[0]?.Emisor ?? 0 : 0;
        }
        catch (HttpRequestException e)
        {
            Console.WriteLine($"Error al obtener datos del emisor: {e.Message}");
        }
    }

    private void Validate()
    {
        if (selectedEmisor == apiResponse[0].Emisor)
        {
            resultado = "Access";
            NavigationManager.NavigateTo("/Index");
            SharedState.CodEmisor = selectedEmisor;
        }
        else
        {
            resultado = "";
        }
    }

    private void LimpiarCampos()
    {
        apiResponse = null;
        user.Username = string.Empty;
        user.Password = string.Empty;
        selectedEmisor = 0;
        resultado = string.Empty;
        showDropdown = false;
        mensaje = string.Empty;
    }

}
