@using System.Net.Http.Json
@using Data
@using System.Text
@using System.Text.Json

@page "/"
@layout LoginLayout
@inject HttpClient Http
@inject NavigationManager NavigationManager


<div class="row mt-5">
    <div class="col-lg-4 offset-lg-4 border">
        <div class="mb-3 offset-lg-4">
            <img src="Images/logoExample.png" alt="Logo de la empresa" class="img-fluid" style="max-width: 150px; max-height: 150px;" />
        </div>
        <div class="mb-3 text-center">
            <h3>LOGIN</h3>
        </div>
        <div class="mb-3">
            <label>Usuario</label>
            <input @bind="user.Username" class="form-control" />
        </div>
        <div class="mb-3">
            <label>Contraseña</label>
            <input @bind="user.Password" class="form-control" type="password" />
        </div>
        <div class="mb-3">
            <button @onclick="GetUser" class="btn btn-primary">Login</button>
        </div>
        <div class="mb-3">
            @if (apiResponse != null)
            {
                if (apiResponse[0].OBSERVACION.Equals("INGRESO EXITOSO"))
                {
                    <p class="text-success">@apiResponse[0].OBSERVACION</p>
                    @if (showDropdown && apiResponse[0].OBSERVACION.Equals("INGRESO EXITOSO"))
                    {
                        <div class="mb-3">
                            <label>Emisor</label>
                            <select @bind="selectedEmisor" class="form-control">
                                <option value="">Seleccione un emisor</option>
                                @foreach (var emisor in apiResponseE)
                                {
                                    <option value="@emisor.Codigo">@emisor.NombreEmisor</option>
                                }
                            </select>
                        </div>
                        <div class="mb-3">
                            <button @onclick="Validate" class="btn btn-primary">Continuar</button>
                        </div>
                        <div class="mb-3">
                            <p class="text-success">@resultado</p>
                        </div>
                    }
                }
                else
                {
                    <p class="text-danger">@apiResponse[0].OBSERVACION</p>
                }
            }
            else if (apiResponse == null && !string.IsNullOrEmpty(user.Username) && !string.IsNullOrEmpty(user.Password))
            {
                <p class="text-danger">FALLO EN EL ACCESO</p>
            }
        </div>
        <div class="d-grid justify-content-md-end">
            <button @onclick="LimpiarCampos" class="btn btn-secondary justify-content-md-end">Cancelar</button>
            <p></p>
        </div>
    </div>
</div>

@code {
    private UserDto user = new UserDto();
    private User[] apiResponse;
    private List<Emisor> apiResponseE = new List<Emisor>();
    private int selectedEmisor;
    private bool showDropdown = false;
    private String resultado;

    private async Task GetUser()
    {
        await GetUserData();
        if (apiResponse != null)
        {
            await GetEmisorData();
        }
        showDropdown = true;
    }

    private async Task GetUserData()
    {
        var apiName = $"api/Usuarios?usuario={user.Username}&password={user.Password}";

        try
        {
            apiResponse = await Http.GetFromJsonAsync<User[]>(apiName);
        }
        catch (HttpRequestException e)
        {
            Console.WriteLine($"Error al obtener datos del usuario: {e.Message}");
            apiResponse = null;
        }
    }

    private async Task GetEmisorData()
    {
        var apiEmisor = "api/Varios/GetEmisor";

        try
        {
            apiResponseE = await Http.GetFromJsonAsync<List<Emisor>>(apiEmisor);
            selectedEmisor = apiResponse.Length > 0 ? apiResponse[0]?.Emisor ?? 0 : 0;
        }
        catch (HttpRequestException e)
        {
            Console.WriteLine($"Error al obtener datos del emisor: {e.Message}");
        }
    }

    private void Validate()
    {
        if (selectedEmisor == apiResponse[0].Emisor)
        {
            resultado = "Access";
            NavigationManager.NavigateTo("/Index");
        }
        else
        {
            resultado = "";
        }
    }

    private void LimpiarCampos()
    {
        apiResponse = null;
        user.Username = string.Empty;
        user.Password = string.Empty;
        selectedEmisor = 0;
        resultado = string.Empty;
        showDropdown = false;
    }

}
