@using Data.MovimientoPlanilla

@page "/movimiento-planilla"
@inject HttpClient Http
@inject NavigationManager NavigationManager
@inject SharedMovimientoPlanilla sharedMovPlanilla

<h3>Movimiento Planilla</h3>

<button class="btn submit-btn-creates" @onclick="CreateMovPlanilla">Create</button>
<p></p>

@if (movsPlanilla != null)
{
    <table class="table table-striped">
        <thead>
            <tr>
                <th>Concepto</th>
                <th>Prioridad</th>
                <th>Tipo de Operación</th>
                <th>Excepción 1</th>
                <th>Excepción 2</th>
                <th>Excepción 3</th>
                <th>IESS</th>
                <th>Impuesto a la Renta</th>
                <th>Afecta IESS</th>
                <th>Manage</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var mov in movsPlanilla)
            {
                <tr>
                    <td>@mov.Concepto</td>
                    <td>@mov.Prioridad</td>
                    <td>@mov.TipoOperacion</td>
                    <td>@mov.MovimientoExcepcion1</td>
                    <td>@mov.MovimientoExcepcion2</td>
                    <td>@mov.MovimientoExcepcion3</td>
                    <td>@mov.Aplica_iess</td>
                    <td>@mov.Aplica_imp_renta</td>
                    <td>@mov.Empresa_Afecta_Iess</td>
                    <td>
                        <button class="btn btn-primary" @onclick="() => EditMovPlanilla(mov)">Editar</button>
                        <button class="btn btn-danger">Borrar</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}
else
{
    <p>Loading...</p>
}


@code {
    private List<MovimientoPlanilla> movsPlanilla = new List<MovimientoPlanilla>();
    private ResponseMovimientoPlanilla[]? apiResponse;

    public async Task GetMovPlanillaData()
    {
        var apiURI = $"api/Varios/MovimientoPlanillaSelect";

        try
        {
            movsPlanilla = await Http.GetFromJsonAsync<List<MovimientoPlanilla>>(apiURI);
        }
        catch (HttpRequestException e)
        {
            Console.WriteLine($"Error al obtener datos: {e.Message}");
            NavigationManager.NavigateTo("/Index");
        }
    }

    protected override async Task OnInitializedAsync()
    {
        await GetMovPlanillaData();
    }

    public void CreateMovPlanilla()
    {
        NavigationManager.NavigateTo("/create-movimiento-planilla");
        sharedMovPlanilla.SetValue(null);
    }

    private void EditMovPlanilla(MovimientoPlanilla movimientoPlanillaU)
    {
        sharedMovPlanilla.SetValue(movimientoPlanillaU);
        NavigationManager.NavigateTo("/create-movimiento-planilla");
    }
}
