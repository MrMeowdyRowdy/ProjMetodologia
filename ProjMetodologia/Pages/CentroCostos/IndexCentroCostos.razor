@using System.Net.Http.Json
@using Data
@using System.Text
@using System.Text.Json
@using Data.Trabajador;

@page "/CentroCostos"
@inject HttpClient Http
@inject NavigationManager NavigationManager
@inject CentroCostos CentroCostosShared


<h3>Centro de costos</h3>

<button class="btn btn-success" @onclick="CreateCentroCostos">Create</button>

@if (centroCostos != null)
{
    <table class="table">
        <thead>
            <tr>
                <th class="white-text">Codigo</th>
                <th class="white-text">Descripcion</th>
                <th class="white-text">Mensaje</th>
                <th class="white-text"></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var atributo in centroCostos)
            {
                <tr>
                    <td class="white-text">@atributo.Codigo</td>
                    <td class="white-text">@atributo.NombreCentroCostos</td>
                    <td class="white-text">@atributo.Mensaje</td>
                    <td>
                        <button class="btn btn-primary" @onclick="() => EditCentroCostos(atributo)">Edit</button>
                        <button class="btn btn-danger" @onclick="() => DeleteCentroCostos(atributo)">Delete</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}
else
{
    <p>Loading...</p>
}

@code {
    private List<CentroCostos> centroCostos = new List<CentroCostos>();

    private async Task GetCentroCostosData()
    {
        var apiName = $"api/Varios/CentroCostosSelect";

        try
        {
            centroCostos = await Http.GetFromJsonAsync<List<CentroCostos>>(apiName);
        }
        catch (HttpRequestException e)
        {
            Console.WriteLine($"Error al obtener datos del usuario: {e.Message}");
        }
    }

    protected override async Task OnInitializedAsync()
    {
        await GetCentroCostosData();
    }

    private CentroCostos centroCostosToEdit;

    private void EditCentroCostos(CentroCostos centroCostos)
    {
        centroCostosToEdit = centroCostos;
    }

    private void DeleteCentroCostos(CentroCostos centroCostos)
    {
        
    }

    private void CreateCentroCostos()
    {
        NavigationManager.NavigateTo("/CreateCentroCostos");
    }
}
