@using ProjMetodologia.Data
@using ProjMetodologia.Data.CentroCosto
@using System.Net.Http
@using System.Net.Http.Json
@using Microsoft.AspNetCore.Components.Routing

@page "/UpdateCentroCostos"
@inject HttpClient Http
@inject NavigationManager NavigationManager
@inject SharedCentroCostos sharedCentroCostos

<h3>Update Centro de Costos</h3>

@if (centroCostos != null)
{
    <form @onsubmit="UpdateCentroCostosData">
        <div class="create-form">
            <label for="codigo">Código:</label>
            <input type="text" class="form-control" id="codigo" @bind="centroCostos.Codigo">
        </div>
        <div class="create-form">
            <label for="nombre">Nombre de Centro de Costos:</label>
            <input type="text" class="form-control" id="nombre" @bind="centroCostos.NombreCentroCostos">
        </div>
        <button type="submit" class="btn submit-btn">Update</button>
        <button @onclick="GoBack" class="btn submit-btn">Cancelar</button>
        <div class="popup" style="@(showPopup ? "display: block;" : "display: none;")">
            <div class="card success-card">
                <div class="container">
                    <img src="Images/icon-success.svg" alt="Error" />
                    <h2>Datos insertados exitosamente</h2>
                </div>
                <p>
                    Los datos han sido guardados exitosamente
                    <br> <br><strong>NOTA:</strong> Click en continuar para volver a la lista general
                </p>
                <button @onclick="ClosePopup" class="btn dismiss-btn">Continuar</button>
            </div>
        </div>
        <div class="popup" style="@(showPopup1 ? "display: block;" : "display: none;")">
            <div class="card success-card">
                <div class="container">
                    <img src="Images/icon-success.svg" alt="Error" />
                    <h2>Error al insertar los datos</h2>
                </div>
                <p>
                    No se pudo insertar los datos, por favor verifique sus entradas e intente de nuevo
                    @* <br> <br><strong>NOTA:</strong> El registro que desea ingresar ya existe *@
                </p>
                <button @onclick="ClosePopup1" class="btn dismiss-btn">Cerrar</button>
            </div>
        </div>
    </form>
}
else
{
    <p>Loading...</p>
}

@code {
    private CentroCostos centroCostos;
    private string codigo;
    private ResponseCentroCostos[] apiResponse;
    private bool showPopup = false;
    private bool showPopup1 = false;

    private async Task SetCentroCostosData()
    {
        centroCostos = sharedCentroCostos.Value;
    }

    protected override async Task OnInitializedAsync()
    {
        await SetCentroCostosData();
    }

    private async Task UpdateCentroCostosData()
    {
        var apiName = $"api/Varios/CentroCostosUpdate?codigocentrocostos={centroCostos.Codigo}&descripcioncentrocostos={centroCostos.NombreCentroCostos}";

        try
        {
            apiResponse = await Http.GetFromJsonAsync<ResponseCentroCostos[]>(apiName);

            if (apiResponse != null && apiResponse[0].NombreCentroCostos.Equals("Actualización Exitosa"))
            {
                showPopup = true;
            }
            else
            {
                showPopup1 = true;
            }
        }
        // catch (System.Text.Json.JsonException j)
        // {
        //     NavigationManager.NavigateTo("/CentroCostos");
        // }
        catch (HttpRequestException e)
        {
            Console.WriteLine($"Error al actualizar Centro de Costos: {e.Message}");
        }
    }
    private void GoBack()
    {
        NavigationManager.NavigateTo("/CentroCostos");
    }

    private void ClosePopup()
    {
        showPopup = false;
        NavigationManager.NavigateTo("/CentroCostos");
    }

    private void ClosePopup1()
    {
        showPopup1 = false;
        NavigationManager.NavigateTo("/UpdateCentroCostos", true);
    }
}
